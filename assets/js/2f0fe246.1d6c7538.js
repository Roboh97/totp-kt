"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3139],{3905:(e,t,o)=>{o.d(t,{Zo:()=>p,kt:()=>m});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(o),h=r,m=d["".concat(l,".").concat(h)]||d[h]||u[h]||a;return o?n.createElement(m,i(i({ref:t},p),{},{components:o})):n.createElement(m,i({ref:t},p))}));function m(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,i=new Array(a);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<a;c++)i[c]=o[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}h.displayName="MDXCreateElement"},4308:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var n=o(7462),r=(o(7294),o(3905));const a={sidebar_position:1},i="Initialize Generator",s={unversionedId:"totp/initialize-generator",id:"totp/initialize-generator",title:"Initialize Generator",description:"Documentation for creating an instance of the Time-Based One-Time Password Generator.",source:"@site/docs/totp/initialize-generator.mdx",sourceDirName:"totp",slug:"/totp/initialize-generator",permalink:"/totp-kt/docs/next/totp/initialize-generator",draft:!1,editUrl:"https://github.com/robinohs/totp-kt/docs/totp/initialize-generator.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Time-Based One-Time Password",permalink:"/totp-kt/docs/next/category/time-based-one-time-password"},next:{title:"Code Generation",permalink:"/totp-kt/docs/next/totp/code-generation"}},l={},c=[{value:"Create Instance",id:"create-instance",level:2},{value:"Spring Boot",id:"spring-boot",level:2},{value:"Customize properties",id:"customize-properties",level:2},{value:"Clock",id:"clock",level:3},{value:"Time period",id:"time-period",level:3},{value:"Tolerance",id:"tolerance",level:3},{value:"Algorithm",id:"algorithm",level:3},{value:"Code length",id:"code-length",level:3}],p={toc:c},d="wrapper";function u(e){let{components:t,...o}=e;return(0,r.kt)(d,(0,n.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"initialize-generator"},"Initialize Generator"),(0,r.kt)("p",null,"Documentation for creating an instance of the Time-Based One-Time Password Generator."),(0,r.kt)("h2",{id:"create-instance"},"Create Instance"),(0,r.kt)("p",null,"You can create an instance of the TotpGenerator in the following way:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"val totpGenerator = TotpGenerator()\n")),(0,r.kt)("h2",{id:"spring-boot"},"Spring Boot"),(0,r.kt)("p",null,"Instead of creating a new instance of a generator each time a token is checked, it is also possible to create a bean within Spring.\nThis allows to configure the generator once and this configuration is maintained each time the bean is injected into a component."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"@Bean\nfun totpGenerator(): TotpGenerator {\n    val generator = TotpGenerator()\n    generator.codeLength = 6\n    generator.algorithm = HashAlgorithm.SHA1\n    generator.timePeriod = Duration.ofSeconds(30)\n    return generator\n}\n")),(0,r.kt)("p",null,"This bean can then be injected in the constructor of any class marked with @Component (@Service, ...)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"@Component\nclass CustomComponent(private val totpGenerator: TotpGenerator) {\n    //...\n}\n")),(0,r.kt)("h2",{id:"customize-properties"},"Customize properties"),(0,r.kt)("p",null,"It is possible to customize the properties of the generator, either by setters or applying them in the constructor."),(0,r.kt)("h3",{id:"clock"},"Clock"),(0,r.kt)("p",null,"The clock is the time source for the generator if no time is passed as an argument to the generateCode or validateCode method."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"val totpGenerator = TotpGenerator(clock = Clock.systemUTC())\n// or\ntotpGenerator.clock = Clock.systemUTC()\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"For testing purposes, one could assign a ",(0,r.kt)("strong",{parentName:"p"},"Clock.fixed")," which always returns the same timestamp and thus the same TOTP code is generated.")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The user's clock and the server's clock need to be in sync for the validation process to work properly.",(0,r.kt)("br",null))),(0,r.kt)("h3",{id:"time-period"},"Time period"),(0,r.kt)("p",null,"The time period is the duration of every time step in which the generated code is the same. This is needed as due to delays (e.g., network delay) the server will not generate the code with the same timestamp as the client. As a compromise between security and usability the default time step is set as 30 seconds."),(0,r.kt)("admonition",{title:"Could break logic",type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"Most authenticator apps, such as those from Microsoft or Google, use a time period of 30 seconds. If you change this duration, they are no longer usable.\nHowever, remember that that they are widely used before you drop support for them.")),(0,r.kt)("h3",{id:"tolerance"},"Tolerance"),(0,r.kt)("p",null,"The tolerance specifies a number of previous tokens that are also accepted as valid tokens in addition to the current valid token."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"A tolerance of one token is set as default. In ",(0,r.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/rfc6238#section-5.2"},"RFC6238#5.2")," a time step is recommended to compensate for delays such as network delay.")),(0,r.kt)("admonition",{title:"Security Risk",type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"Expanding the tolerance to a very high number, lowers the security significantly.")),(0,r.kt)("h3",{id:"algorithm"},"Algorithm"),(0,r.kt)("p",null,"The algorithm specifies the Hashing algorithm used to generate the 2-factor codes."),(0,r.kt)("admonition",{title:"Could break logic",type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"Most authenticator apps, such as those from Microsoft or Google, use SHA1 (although it is no longer considered secure).\nIf you change the algorithm, the authentication app must also support it, or it cannot be used.")),(0,r.kt)("h3",{id:"code-length"},"Code length"),(0,r.kt)("p",null,"The code length specifies how long a generated code will be. If the code length is changed, it is necessary that the user's authenticator app supports this as well."),(0,r.kt)("admonition",{title:"Could break logic",type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"Most authenticator apps, such as those from Microsoft or Google, use a length of 6 digits. If you change this number, they are no longer usable.\nHowever, remember that that they are widely used before you drop support for them.")))}u.isMDXComponent=!0}}]);